# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# See supported Node.js release schedule at https://nodejs.org/en/about/releases/

name: Sample Run

on:
  push:
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  sample_run:
    timeout-minutes: 8
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
#        node-version: ['18.x', '20.x', '21.x']
#        jdk-version: [ "8", "11", "17", "21", "24" ]
#        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        node-version: [ '18.x', '21.x' ]
        jdk-version: [ "8", "11" ]
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - name: Checkout working directory
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::751999266872:role/GitHubWorkflows
          role-session-name: myGitHubActions

      - name: Set up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: 'corretto'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: npm clean install, build, and test
        run: |
          npm ci
          npm run build --if-present
          npm test

      - name: Install dependencies
        run: |
          npm install

      - name: Running data producer
        run: |
          cd samples/basic_sample/producer
          node sample_kinesis_producer_app.js

      - name: Running data processor
        # potentially change /usr/bin/java to $(which java) if jdk version is messed up
        # potentially change cd to ~/samples
        run: |
          cd samples/basic_sample/consumer
          ../../../bin/kcl-bootstrap --java /usr/bin/java -e -p ./sample.properties